buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://repo.spongepowered.org/repository/forge-proxy/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.CDAGaming:ForgeGradle:1c670759c5'
    }
}

plugins {
    id "com.wynprice.cursemaven" version "2.1.4"
}

apply plugin: 'forge'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}



version = "1.7.10-10.13.4.1614-1.7.10"
group = "pl.asie.computronics" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TPMetro2033SPB"

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

repositories {
    maven {
        name = "OC repo"
        url = "http://maven.cil.li/"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
}


dependencies {
    //compileOnly("com.bluepowermod:BluePower:${config.bluepower.version}:deobf") {
    //  transitive = false
    //}
    //compileOnly("qmunity:QmunityLib:${config.qmunitylib.version}:deobf") {
    //  transitive = false
    //}
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"

    //replaceIn "pl/asie/computronics/Computronics.java"
    //replace "@VERSION@", "${config.computronics.version}"
}

sourceSets {
    main {
        output.resourcesDir = 'build/classes/java/main'
    }
}


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


//For Building

jar {
    manifest {
        attributes 'FMLCorePlugin': 'gloomyfolken.hooklib.example.ExampleHookLoader'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
    manifest{
        attributes 'FMLAT': 'tp_at.cfg'
    }
}

def libDir = './build/libs'

